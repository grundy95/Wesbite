library(blogdown)
blogdown::install_hugo(force=TRUE)
blogdown::serve_site()
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
setwd("~/Dropbox/STOR-i/Computing/R/EmmaHelp")
ipak <- function(pkg){
new.pkg <- pkg[!(pkg %in% installed.packages()[, "Package"])]
if (length(new.pkg))
install.packages(new.pkg, dependencies = TRUE)
sapply(pkg, require, character.only = TRUE)
}
# List of packages
packages <- c("sp","raster","dismo","maptools","rgdal","proj4","ggplot2","gridExtra",
"cowplot","biomod2","rJava","pROC","matrixStats","usdm","kernlab",
"ks","sm","gbm","mgcv","nlme","Metrics","tidyr","readxl","RStoolbox","psych","vegan")
ipak(packages)
excel_sheets("NoDupl_ALL.xlsx")
S_exempta <- read_excel("NoDupl_ALL.xlsx", sheet = "Hoja1")
str(S_exempta)
S_exempta <- S_exempta[!is.na(S_exempta$DecimalLongitude),]
S_exempta <- S_exempta[!is.na(S_exempta$DecimalLatitude),]
S_exempta.sp <- SpatialPoints(S_exempta[,c("DecimalLongitude","DecimalLatitude")],
proj4string = CRS("+proj=longlat +datum=WGS84"))
S_exempta.ly <- SpatialPointsDataFrame(S_exempta.sp, S_exempta)
plot(S_exempta.ly)
?readOGR
Africa_ADM0 <- readOGR(dsn='.', layer="Africa")
setwd(path_wd)
PCS <- Africa_ADM0@proj4string
S_exempta.ly <- spTransform(S_exempta.ly, PCS)
S_exempta.ly <- S_exempta.ly[Africa_ADM0,]
S_exempta.sp <- as(S_exempta.ly, "SpatialPoints")
dups <- duplicated(S_exempta.ly@data[,c("DecimalLongitude","DecimalLatitude")])
length(which(dups== TRUE))
S_exempta.ly <- S_exempta.ly[!dups,]
dim(S_exempta.ly) #   unique occurrences
rm(dups)
plot(Africa_ADM0, xlim=c(-20,55), ylim=c(-36,40),
axes=TRUE, col="light yellow")
plot(S_exempta.ly, cex=0.5, col="red", add = TRUE)
# Read the path to the files with a tif extension
raster.files <- list.files(path_covariates, pattern="*tif$", full.names=TRUE)
# Read the path to the files with a tif extension
raster.files <- list.files('.', pattern="*tif$", full.names=TRUE)
stopifnot(length(raster.files)>0)
Covariates_5km <- stack(raster.files)
names(Covariates_5km)
names(Covariates_5km)
Predictors <- Covariates_5km
names(Predictors)
crs(Predictors) <- "+proj=longlat +datum=WGS84 +no_defs +ellps=WGS84 +towgs84=0,0,0"
latlon <- "+proj=longlat +datum=WGS84"
Predictors <- projectRaster(Predictors, crs=latlon, res=0.1)
Covariates_5km <- stack(raster.files)
names(Covariates_5km)
Predictors <- Covariates_5km
plot(Predictors)
AI <- Covariates_5km
crs(AI) <- "+proj=longlat +datum=WGS84 +no_defs +ellps=WGS84 +towgs84=0,0,0"
plot(AI)
source("SEEG_SDM.R")
Test1<-BIOMOD_FormatingData(resp.var = S_exempta.sp,
expl.var=AI,
resp.xy = NULL,
resp.name = "S_exempta",
eval.resp.var = NULL,
eval.expl.var = NULL,
eval.resp.xy = NULL,
PA.nb.rep = 1,
PA.nb.absences = 400,
PA.strategy = 'random',
PA.table = NULL,
na.rm = FALSE)
plot(S_exempta.sp)
Test1
summary(Test1@data.species)
plot(Test1)
myBiomodOptions <- BIOMOD_ModelingOptions(
GLM = list( type = 'quadratic',
interaction.level = 0,
myFormula = NULL,
test = 'AIC',
family = 'binomial',
control = glm.control(epsilon = 1e-08,
maxit = 1000,
trace = FALSE) ))
Print_Default_ModelingOptions()
myBiomodOptions
system.time(s.ex.model1 <- BIOMOD_Modeling(Test1,
models = c("GLM"),
models.options = myBiomodOptions,
NbRunEval = 10,
DataSplit = 80,
Yweights = NULL,
VarImport = 3,
models.eval.meth = c("TSS","ROC","ACCURACY"),
SaveObj = TRUE,
rescal.all.models = FALSE,
do.full.models = FALSE,
modeling.id = paste("Sexem","Final",sep =".")))
system.time(s.ex.model1 <- BIOMOD_Modeling(Test1,
models = c("GLM"),
models.options = NULL,
NbRunEval = 10,
DataSplit = 80,
Yweights = NULL,
VarImport = 3,
models.eval.meth = c("TSS","ROC","ACCURACY"),
SaveObj = TRUE,
rescal.all.models = FALSE,
do.full.models = FALSE,
modeling.id = paste("Sexem","Final",sep =".")))
?BIOMOD_Modeling
system.time(s.ex.model1 <- BIOMOD_Modeling(Test1,
models = c("CTA"),
models.options = NULL,
NbRunEval = 10,
DataSplit = 80,
Yweights = NULL,
VarImport = 3,
models.eval.meth = c("TSS","ROC","ACCURACY"),
SaveObj = TRUE,
rescal.all.models = FALSE,
do.full.models = FALSE,
modeling.id = paste("Sexem","Final",sep =".")))
s.ex.model1
system.time(s.ex.model1 <- BIOMOD_Modeling(Test1,
models = c("GLM"),
models.options = NULL,
NbRunEval = 10,
DataSplit = 80,
Yweights = NULL,
VarImport = 3,
models.eval.meth = c("TSS","ROC","ACCURACY"),
SaveObj = TRUE,
rescal.all.models = FALSE,
do.full.models = FALSE,
modeling.id = paste("Sexem","Final",sep =".")))
Test1
class(Test1)
Test1
is.factor(Test1)
summary(Test1@data.species)
raster::is.factor(Test1)
